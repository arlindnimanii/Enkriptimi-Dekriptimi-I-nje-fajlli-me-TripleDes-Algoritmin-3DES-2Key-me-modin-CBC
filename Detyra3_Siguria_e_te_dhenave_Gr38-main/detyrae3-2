

Skip to content
Using University of Prishtina "Hasan Prishtina" Mail with screen readers
Conversations
Using 0.46 GB
Program Policies
Powered by Google
Last account activity: 1 hour ago
Details
import java.security.MessageDigest;
import java.util.Arrays;

	import javax.crypto.Cipher;
	import javax.crypto.SecretKey;
	import javax.crypto.spec.IvParameterSpec;
	import javax.crypto.spec.SecretKeySpec;

	public class EDEMODE {

	    public static void main(String[] args) throws Exception {

	    	String text = "DETYRA8";

	    	byte[] codedtext = new EDEMODE().encrypt(text);
	    	String decodedtext = new EDEMODE().decrypt(codedtext);

	    	System.out.println(codedtext); // this is a byte array, you'll just see a reference to an array
	    	System.out.println(decodedtext); // This correctly shows "DETYRA8"
	    }

	    public byte[] encrypt(String message) throws Exception {
	    	final MessageDigest md = MessageDigest.getInstance("md5");
	    	final byte[] digestOfPassword = md.digest("HG58YZ3CR9"
	    			.getBytes("utf-8"));
	    	final byte[] keyBytes = Arrays.copyOf(digestOfPassword, 24);
	    	for (int j = 0, k = 16; j < 8;) {
	    		keyBytes[k++] = keyBytes[j++];
	    	}

	    	final SecretKey key = new SecretKeySpec(keyBytes, "DESede");
	    	final IvParameterSpec iv = new IvParameterSpec(new byte[8]);
	    	final Cipher cipher = Cipher.getInstance("DESede/CBC/PKCS5Padding");
	    	cipher.init(Cipher.ENCRYPT_MODE, key, iv);

	    	final byte[] plainTextBytes = message.getBytes("utf-8");
	    	final byte[] cipherText = cipher.doFinal(plainTextBytes);
	    	// final String encodedCipherText = new sun.misc.BASE64Encoder()
	    	// .encode(cipherText);

	    	return cipherText;
	    }

	    public String decrypt(byte[] message) throws Exception {
	    	final MessageDigest md = MessageDigest.getInstance("md5");
	    	final byte[] digestOfPassword = md.digest("HG58YZ3CR9"
	    			.getBytes("utf-8"));
	    	final byte[] keyBytes = Arrays.copyOf(digestOfPassword, 24);
	    	for (int j = 0, k = 16; j < 8;) {
	    		keyBytes[k++] = keyBytes[j++];
	    	}

	    	final SecretKey key = new SecretKeySpec(keyBytes, "DESede");
	    	final IvParameterSpec iv = new IvParameterSpec(new byte[8]);
	    	final Cipher decipher = Cipher.getInstance("DESede/CBC/PKCS5Padding");
	    	decipher.init(Cipher.DECRYPT_MODE, key, iv);

	    	// final byte[] encData = new
	    	// sun.misc.BASE64Decoder().decodeBuffer(message);
	    	final byte[] plainText = decipher.doFinal(message);

	    	return new String(plainText, "UTF-8");
	    }
	}

faza3.txt
Displaying faza3.txt.
